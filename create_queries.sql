CREATE TABLE IF NOT EXISTS Genres (
	id SERIAL PRIMARY KEY,
	name VARCHAR(40) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS Singers (
	id SERIAL PRIMARY KEY,
	name VARCHAR(40) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS GenresSingers (
	id SERIAL PRIMARY KEY,
	genre_id INTEGER NOT NULL REFERENCES Genres(id),
	singer_id INTEGER NOT NULL REFERENCES Singers(id)
);

CREATE TABLE IF NOT EXISTS Alboms (
	id SERIAL PRIMARY KEY,
	name VARCHAR(40) NOT NULL,
	year INTEGER CHECK (year > 1900) NOT NULL
);

CREATE TABLE IF NOT EXISTS AlbomsSingers (
	id SERIAL PRIMARY KEY,
	albom_id INTEGER NOT NULL REFERENCES Alboms(id),
	singer_id INTEGER NOT NULL REFERENCES Singers(id)
);

CREATE TABLE IF NOT EXISTS Tracks (
	id SERIAL PRIMARY KEY,
	name VARCHAR(40) NOT NULL,
	duration INTEGER CHECK (duration > 0) NOT NULL,
	albom_id INTEGER NOT NULL REFERENCES Alboms(id)
);

CREATE TABLE IF NOT EXISTS Collections (
	id SERIAL PRIMARY KEY,
	name VARCHAR(40) NOT NULL,
	year INTEGER CHECK (year > 1900) NOT NULL
);

CREATE TABLE IF NOT EXISTS TracksCollections (
	id SERIAL PRIMARY KEY,
	track_id INTEGER NOT NULL REFERENCES Tracks(id),
	collection_id INTEGER NOT NULL REFERENCES Collections(id)
);

--доп. задание, сотрудник
CREATE TABLE IF NOT EXISTS Employees (
	id SERIAL PRIMARY KEY,
	name VARCHAR(100) NOT NULL,
	Department VARCHAR(100) NOT NULL,
	chief INTEGER NOT NULL REFERENCES Employees(id)
);